Parallel proceeing:

    8 core cpu 
    1 cpu -> async methods 
        fs.readFile("/file.md", (err, data) => {
            if (err) throw err;
            });
        Functional Programing 
    2 cpu ->  (err, data) => {
            if (err) throw err;
            return -> flow, data 
            }


Browser: 
    1. window alert()
    2. document getelementbyid() 

node: 
    global 
    process 

Async Progrmaing -> return of data 

    1. using callback methods 
    2. async await keywords -> markers 
        tend to use promises 

        main thread                             sub thread 
            1.                                  1.
            2. promise()=>{}                    2. -> success, failure 
                .then()
                .catch()
            3.